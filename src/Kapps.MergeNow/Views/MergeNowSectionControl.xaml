<UserControl x:Class="MergeNow.Views.MergeNowSectionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MergeNow.Views"
             xmlns:vms="clr-namespace:MergeNow.ViewModels"
             xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             mc:Ignorable="d" d:Background="White" d:DesignHeight="350" d:DesignWidth="400"
             IsEnabled="{Binding IsSectionEnabled}">

    <d:UserControl.DataContext>
        <vms:MergeNowSectionDesignViewModel/>
    </d:UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
            <Style x:Key="VsTextBlockStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTextBrushKey}}" />
            </Style>
            <Style x:Key="VsHyperlinkStyle" TargetType="Hyperlink">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platform:EnvironmentColors.PanelHyperlinkBrushKey}}" />
                <Setter Property="TextDecorations" Value="None" />
            </Style>
            <Style x:Key="VsExpanderStyle" TargetType="Expander">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowTextBrushKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static platform:EnvironmentColors.ToolWindowBackgroundBrushKey}}" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Text="Changeset" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0"
                Style="{StaticResource VsTextBlockStyle}"/>
        <TextBox Margin="5,0,0,0" Height="22" Grid.Row="0" Grid.Column="1" x:Name="ChangesetNumberTb"
                Text="{Binding ChangesetNumber, UpdateSourceTrigger=PropertyChanged}"
                Style="{DynamicResource {x:Static shell:VsResourceKeys.TextBoxStyleKey}}" VerticalAlignment="Center"/>
        <TextBlock Margin="5,10,0,0" Height="22" Grid.Row="0" Grid.Column="1" IsHitTestVisible="False" Opacity="0.5"
                   Text="Enter a changeset number" VerticalAlignment="Center" HorizontalAlignment="Left" Padding="3">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource VsTextBlockStyle}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSectionEnabled}" Value="True" />
                                <Condition Binding="{Binding Text, ElementName=ChangesetNumberTb}" Value="" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <Button Content="..." Margin="5,0,0,0" VerticalAlignment="Center" Width="30" Height="22" Grid.Row="0" Grid.Column="3"
                Command="{Binding BrowseCommand}"
                Style="{DynamicResource {x:Static shell:VsResourceKeys.ButtonStyleKey}}"/>

        <Button Content="Find" Margin="5,5,0,0" HorizontalAlignment="Left" Width="120" Height="22" Grid.Row="1" Grid.Column="1"
                Grid.ColumnSpan="2" Command="{Binding FindCommand}"
                Style="{DynamicResource {x:Static shell:VsResourceKeys.ButtonStyleKey}}"/>

        <TextBlock Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,5,5,0" Style="{StaticResource VsTextBlockStyle}">
            <Hyperlink Command="{Binding OpenChangesetCommand}" Style="{StaticResource VsHyperlinkStyle}">
                <TextBlock Text="{Binding ChangesetName}" TextWrapping="Wrap">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="TextDecorations" Value="Underline" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Hyperlink>
        </TextBlock>

        <TextBlock Text="Merge To" Grid.Row="3" Grid.Column="0"
                Style="{StaticResource VsTextBlockStyle}" VerticalAlignment="Center"/>
        <ComboBox Margin="5,5,0,0" Height="22" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" x:Name="TargetBranchCb"
                ItemsSource="{Binding TargetBranches}" SelectedItem="{Binding SelectedTargetBranch}"
                IsEnabled="{Binding AnyTargetBranches}"
                Style="{DynamicResource {x:Static shell:VsResourceKeys.ComboBoxStyleKey}}"/>
        <TextBlock Margin="5,10,1,0" Height="22" Grid.Row="3" Grid.Column="1" IsHitTestVisible="False" Opacity="0.5"
                   Text="Select a target branch" VerticalAlignment="Center" HorizontalAlignment="Left" Padding="3">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource VsTextBlockStyle}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding AnyTargetBranches}" Value="True" />
                                <Condition Binding="{Binding Text, ElementName=TargetBranchCb}" Value="" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <Button Content="Merge" Width="120" Margin="5,5,5,0" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"
                Height="22" Command="{Binding MergeCommand}" HorizontalAlignment="Left"
                Style="{DynamicResource {x:Static shell:VsResourceKeys.ButtonStyleKey}}"/>

        <Expander Header="Advanced" Margin="5,5,0,0" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2"
                  IsExpanded="{Binding IsAdvancedExpanded}"  Style="{StaticResource VsExpanderStyle}">
            <StackPanel Orientation="Vertical" Margin="5">

                <CheckBox Margin="0,5,0,0" Content="Combined merge" VerticalAlignment="Center"
                    IsChecked="{Binding CombinedMerge}" ToolTipService.InitialShowDelay = "100"
                    Style="{DynamicResource {x:Static shell:VsResourceKeys.CheckBoxStyleKey}}">
                    <CheckBox.ToolTip>
                        <TextBlock>
                            Select when you want to inlude several merges to different target branches in one changeset.
                            <LineBreak />
                            The changeset comment will be amended not replaced.
                        </TextBlock>
                    </CheckBox.ToolTip>
                </CheckBox>

                <WrapPanel Orientation="Horizontal">
                    <Button Margin="0,10,10,0" Content="Clear Pending Changes" Height="22" Padding="5,0"
                        Command="{Binding ClearPageCommand}" HorizontalAlignment="Left" ToolTipService.InitialShowDelay = "100"
                        Style="{DynamicResource {x:Static shell:VsResourceKeys.ButtonStyleKey}}">
                        <Button.ToolTip>
                            <TextBlock>
                                Clears comment, clears associated workitems and excludes all pending changes.
                                <LineBreak />
                                This will not undo your pending changes.
                            </TextBlock>
                        </Button.ToolTip>
                    </Button>

                    <Button Margin="0,10,0,0" Content="Clear Merge Now" Height="22" ToolTip="Clears Merge Now section." Padding="5,0"
                        Command="{Binding ClearMergeNowCommand}" HorizontalAlignment="Left" ToolTipService.InitialShowDelay = "100"
                        Style="{DynamicResource {x:Static shell:VsResourceKeys.ButtonStyleKey}}">
                    </Button>
                </WrapPanel>
            </StackPanel>
        </Expander>
        <TextBlock Text="Status" VerticalAlignment="Center" Grid.Row="6" Grid.Column="0"
                Style="{StaticResource VsTextBlockStyle}"/>
        <TextBox Margin="5,5,0,0" Grid.Row="6" Grid.Column="1" x:Name="Message" Grid.ColumnSpan="2"
            Text="{Binding Message, UpdateSourceTrigger=PropertyChanged}"
            Style="{DynamicResource {x:Static shell:VsResourceKeys.TextBoxStyleKey}}" MinHeight="80" VerticalAlignment="Top"/>

    </Grid>
</UserControl>
